Ply of four, -O3 optimization, on my machine

Version		1. e4	Fischer 11. Bg5	  Major Changes
----------------------------------------------------------------------------------------------------------------------------------------------------------
Python		138			(Roughly; handtimed)
14		0.643			Added best line structs = more memory overhead
15		0.754			Removed move_info pointer from move struct, put into move_array. Thus are malloc/writing/freeing more in score(pos,0)
16		0.243			No more mallocing/writing/freeing in score(pos,0): only count #moves
17		0.188			Preliminary alpha-beta pruning. (not yet in computer_move)
18		0.161			Putting alpha-beta into computer_move too
19		0.263			Debugging memchecks in ai.c, optimized/fixed find_piece, debugged rooksac.
20		0.0149			Fixed alpha-beta: if(high <= low) not if(high < low)
22		0.0148			Few changes, mostly user based
27		0.0377			New bitboard structs, writing lots of memory for undoing moves, (no unmove function yet)
28		0.0133			Analyze captures first
29		0.0166			Sort moves based upon captured piece value
30		0.0168			Added en passant
32		0.0168			Chess implemented almost fully properly: castling + en passant + promotion (real time: 0.0239)
35		0.230			Implemented quiescience search
36		0.230			Added TOLERANCE in ai.c comparisons
37		0.225			Precomputed notlinboard = ~linboard
37		0.219			Changed ffsll and inlined it
37		0.214	Qc7 128.5	Don't evaluate full position if down two pawns; much higher expected performance gains for middle game.
38		0.157	Qc7   2.84	Implemented negamax, fixed quiescient search bug. (now evaluates a position before its children)
38			Na4  61.6	(ply 6), continues 12 ..Nc3  13 ..Qd6
40		0.150	Qc7   3.23	Some bug fixes, adding code to see if in check, and beginning iterative deepening
40			Na4  78.3	(ply 6)
42		0.0910  Bxf3  4.12	Beginning iterative deepening, but presumed bugs. Changed evaluation function slightly.
45		0.0700	Bxf3  0.84	Fixed move-ordering bug, (was doing backwards!), set memory load constant.
45			Nbd7  29.3	(ply 6)
49		0.0767			Begun implementing hashes.
50		0.034			Created dequietmoves to only generate captures, pawn promotions, and (later) checks.
50		0.036			
